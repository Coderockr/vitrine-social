FORMAT: 1A
HOST: http://api.vitrine.dev:8001/v1

# Vitrine Social

Vitrine Social.

# Group API

## Sobre [/v1/]

Aqui podemos descrever detalhes que são comuns a todos os serviços como formatos, headers, tipos de erros, etc

## Retornos [/v1/returns]

### Tipos de retorno esperado

| HTTP status code  | summary |
| ------------- | ------------- |
| 200 - OK | Everything worked as expected. |
| 207 - Multi-Status | Se uma operação foi realizada em batch e algum dos itens não foi realizado com sucesso |
| 400 - Bad Request | The request was unacceptable, often due to missing a required parameter. |
| 401 - Unauthorized | No valid API key provided. |
| 403 - Forbidden | No access to requested resource. |
| 402 - Request Failed | The parameters were valid but the request failed. |
| 404 - Not Found | The requested resource doesn't exist. |
| 409 - Conflict | The request conflicts with another request (perhaps due to using the same idempotent key). |
| 429 - Too Many Requests | Too many requests hit the API too quickly. We recommend an exponential backoff of your requests. |
| 500, 502, 503, 504  | Server Errors  Something went wrong on Stripe's end. (These are rare.) |


### Corpo da mensagem de erro

As requisições que gerarem erro devem ter as informações abaixo no corpo da mensagem

```
{
  "code" : 1234,
  "message" : "Something bad happened :(",
}

```

O status code deve ser diferente de 200 e 201


### Corpo da mensagem de sucesso na criação/atualização

As requisições que finalizaram com sucesso devem ter as informações abaixo no corpo da mensagem

```
{
  "id" : 1234
}

```

O status code deve ser 200 ou 201

### Headers padrão

| Parâmetro  | Significado | Valores |
| ------------- | ------------- | --- |
| Accept | Indica para a API o formato que é esperado no retorno | application/json |
| Content-Type | Indica qual é o formato que está sendo usado para enviar os dados | application/json ou multipart/form-data |
| Authorization | Token JWT usado para autenticação | Um token JWT ou vazio |

# Group Autenticação

## Login [/v1/auth/login]

### Realizar login [POST]

+ Request Login

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Attributes (Login)

+ Response 200 (application/json)
    + Attributes
        + organization (BaseOrganization)
        + token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ (string)

+ Response 401 (application/json)
    + Attributes (Error)

## Logout [/v1/auth/logout]

### Realizar logout [POST]

+ Request Logout

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT

+ Response 204

## Atualizar Senha [/v1/auth/update-password]

### Atualizar Senha [POST]

+ Request Atualizar Senha

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT

    + Attributes (PasswordUpdate)

+ Response 200

+ Response 400 (application/json)
    + Attributes (Error)

# Group Search

Realizar busca das necessidades

## Search [/v1/search?text={text}&category={categories}&org={org}&page={page}]

### Fazer busca [GET]

+ Parameters
    + text: texto a ser pesquisado (string, optional) - Texto a ser pesquidado
    + categories: 1,2,3 (string, optional) - Ids das categorias
    + org: 1 (number, optional) - Id da entidade para filtrar
    + page: 1 (number, optional) - Paginação (vai trazer sempre 10 por página)

+ Request Busca das necessidades

    + Headers

            Accept: application/json
            Content-Type: application/json

+ Response 200 (application/json)
    + Attributes (array[BaseNeed])

# Group Organization

## Organização [/v1/organization/{id}]

### Perfil da ONG [GET]

+ Parameters
    + id (number) - Id da ONG

+ Response 200 (application/json)
    + Attributes (DetailedOrganization)

+ Response 404 (application/json)
    + Attributes (Error)

### Atualizar ONG [PUT]

+ Parameters
    + id (number) - Id da ONG

+ Request Atualizar

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT
    + Attributes (DetailedOrganization)


+ Response 204 (application/json)

+ Response 400 (application/json)
    + Attributes (Error)


## Subscribe [/v1/organization/{id}/subscribe]

### Receber notificações [POST]

+ Parameters
    + id (number) - Id da ONG

+ Request
    + Attributes
        + email (string) - E-mail
        + name (string) - Nome
        + phone (string) - Telefone

+ Response 204 (application/json)

+ Response 404 (application/json)
    + Attributes (Error)

## Unsubscribe [/v1/organization/{id}/unsubscribe/{email}]

### Parar de receber notificações [GET]

+ Parameters
    + id (number) - Id da ONG
    + email (string) - E-mail

+ Response 204 (application/json)

+ Response 404 (application/json)
    + Attributes (Error)


## Upload [/v1/organization/{id}/upload]

### Fazer upload [POST]

+ Parameters
    + id (number) - Id da ONG

+ Request Upload de um arquivo

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT
    + Attributes (UploadFile)

+ Response 201 (application/json)
    + Attributes (Created)

+ Response 400 (application/json)
    + Attributes (Error)


## Remover imagem [/v1/organization/{id}/image/{image_id}]

### Remover imagem [DELETE]

+ Parameters
    + id (number) - Id da ONG
    + image_id (number) - Id da imagem


+ Request

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT

+ Response 204

+ Response 400 (application/json)
    + Attributes (Error)

# Group Need

## Necessidade [/v1/need/{id}]

### Dados da necessidade [GET]

+ Parameters
    + id (number) - Id da necessidade

+ Response 200 (application/json)
    + Attributes (Need)

+ Response 404 (application/json)
    + Attributes (Error)

### Atualizar Need [PUT]

+ Parameters
    + id (number) - Id da necessidade

+ Request Atualizar

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT
    + Attributes (NeedPayload)


+ Response 204 (application/json)

+ Response 400 (application/json)
    + Attributes (Error)

## Criar [/v1/need]

### Criar Need [POST]

+ Request Criar

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT
    + Attributes (NeedPayload)


+ Response 201 (application/json)
    + Attributes (Created)

+ Response 400 (application/json)
    + Attributes (Error)


## Upload [/v1/need/{id}/upload]

### Fazer upload [POST]

+ Parameters
    + id (number) - Id da necessidade

+ Request Upload de um arquivo

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT
    + Attributes (UploadFile)

+ Response 201 (application/json)
    + Attributes (Created)

+ Response 400 (application/json)
    + Attributes (Error)

## Remover imagem [/v1/need/{id}/image/{image_id}]

### Remover imagem [DELETE]

+ Parameters
    + id (number) - Id da necessidade
    + image_id (number) - Id da imagem


+ Request

    + Headers

            Accept: application/json
            Content-Type: application/json
            Authorization: JWT

+ Response 204

+ Response 400 (application/json)
    + Attributes (Error)


## Response [/v1/need/{id}/response]

### Responder a uma necessidade [POST]

+ Parameters
    + id (number) - Id da necessidade

+ Request
    + Attributes
        + email (string) - E-mail
        + name (string) - Nome
        + phone (string) - Telefone
        + address (string) - Endereço
        + message (string) - Mensagem enviada para a ONG

+ Response 200 (application/json)
    + Attributes
        + id (number) - Id da Resposta
    
+ Response 404 (application/json)
    + Attributes (Error)

# Data Structures

## Created (object)
+ id (number) - Id gerado

## Error (object)
+ code: 400 (number) - Status code
+ message (string) - Mensagem do status

## NeedPayload (object)
+ category (number) - ID da Categoria da necessidade
+ organization (number) - ID da ONG
+ title (string) - Resumo da necessidade
+ description (string) - Descrição detalhada da necessidade
+ requiredQuantity (number) - Quantidade necessária
+ reachedQuantity (number) - Quantidade alcançada
+ dueDate: `2017-08-17` (string) - Data final da necessidade
+ unity: kg (string) - Unidade da necessidade

## BaseNeed (object)
+ id (number) - Código da necessidade
+ category (Category) - Categoria da necessidade
+ organization (BaseOrganization) - ONG
+ images (array[Image]) - Imagens relacionadas
+ title (string) - Resumo da necessidade
+ description (string) - Descrição detalhada da necessidade
+ requiredQuantity (number) - Quantidade necessária
+ reachedQuantity (number) - Quantidade alcançada
+ unity: kg (string) - Unidade da necessidade
+ dueDate: `2017-08-17` (string) - Data final da necessidade

## Need (BaseNeed)
+ status (string) - Status da necessidade (ACTIVE/INACTIVE)

## Category (object)
+ id (number) - Código da categoria
+ name (string) - Nome da categoria
+ icon (string) - Link do ícone da categoria

## BaseOrganization (object)
+ id (number) - Código da ONG
+ name (string) - Nome da ONG
+ logo (string) - Link do logo da ONG
+ slug (string) - Hash da ONG

## DetailedOrganization (BaseOrganization)
+ address (string) - Endereço da ONG
+ phone (string) - Telefone
+ resume (string) - Descrição detalhada da ONG
+ images (array[Image]) - Imagens relacionadas
+ video (string) - Link de um video no Youtube sobre a ONG
+ needs (array[Need]) - Lista de necessidades
+ email (string) - E-mail da ONG (também usado para login)

## Organization (DetailedOrganization)
+ password (string) - Senha

## Login (object)
+ username: admin@vitrine.org.br (string) - Username do usuário
+ password: 123 (string) - Senha

## PasswordUpdate (object)
+ currentPassword: 123 (string) - Senha Atual
+ newPassword: 1234 (string) - Nova Senha

## Image (object)
+ id (number) - Código da imagem
+ name (string) - Nome da imagem
+ url (string) - URL da imagem

## UploadFile (object)
+ name: `File.png` (string) - Nome do arquivo
+ content: `file content` (string) - Conteúdo do arquivo formatado como Base64
